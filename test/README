# Project Tests Directory

This directory is intended for the PlatformIO Test Runner and project tests.

## Overview

Unit Testing is a software testing method by which individual units of source code, sets of one or more MCU program modules together with associated control data, usage procedures, and operating procedures, are tested to determine whether they are fit for use. Unit testing finds problems early in the development cycle.

## Test Files

### [test_main.cpp](test/test_main.cpp)

This file contains various unit tests for the project, including:

- **LED Tests**: Tests to verify the functionality of the built-in LED.
  - `test_led_builtin_pin_number`
  - `test_led_state_high`
  - `test_led_state_low`

- **Time Transformation Tests**: Tests to verify the transformation of time strings.
  - `test_transformTime_validFormat`
  - `test_transformTime_invalidFormat`

- **Message Received Tests**: Tests to verify the handling of received messages and their transformations.
  - `test_messageReceived_GPS_TME`
  - `test_messageReceived_GPS_DTE`
  - `test_messageReceived_GPS_SPD`
  - `test_messageReceived_GPS_ALT`
  - `test_messageReceived_ECU_TPS`
  - `test_messageReceived_ECU_MAT`
  - `test_messageReceived_ECU_BAT`
  - `test_messageReceived_ECU_DWL`
  - `test_messageReceived_noPayloadTransformation`

- **Configuration Tests**: Tests to verify the saving and loading of configuration parameters.
  - `test_paramSave`
  - `test_paramLoad`

## Running Tests

To run the tests, use the PlatformIO Test Runner. Ensure that your development environment is set up with PlatformIO and the necessary dependencies are installed.

More information about PlatformIO Unit Testing can be found at the following link:
- [PlatformIO Unit Testing Documentation](https://docs.platformio.org/en/latest/advanced/unit-testing/index.html)